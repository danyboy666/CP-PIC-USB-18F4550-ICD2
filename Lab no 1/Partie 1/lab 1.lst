CCS PCH C Compiler, Version 4.062, 41466               02-févr.-12 16:39

               Filename: C:\Users\Etudiant\Desktop\243-444-RK\Lab no 1\lab 1.lst

               ROM used: 222 bytes (1%)
                         Largest free fragment is 32546
               RAM used: 5 (0%) at main() level
                         7 (0%) worst case
               Stack:    2 locations

*
0000:  GOTO   0068
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... //            Applications des microcontrolleurs        243-444-RK           // 
.................... //                            Laboratoire no. 1                              // 
.................... // Programme no 1: Faire clignoter 2 LED en alternance.                      // 
.................... //                                                                           // 
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... //                                                                           // 
.................... // Copyright: Dany Ferron 2012                                               // 
.................... //                                                                           // 
.................... /////////////////////////////////////////////////////////////////////////////// 
....................  
.................... #include "lab 1.h" 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HS                    	//High speed Osc (> 4mhz) 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES BROWNOUT              	//Reset when brownout detected 
.................... #FUSES BORV20                	//Brownout reset at 2.0V 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES LVP                   	//Low Voltage Programming on B3(PIC16) or B5(PIC18) 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES IESO                  	//Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                 	//Fail-safe clock monitor enabled 
.................... #FUSES PBADEN                	//PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOWRTB                	//Boot block not write protected 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES MCLR                  	//Master Clear pin enabled 
.................... #FUSES LPT1OSC               	//Timer1 configured for low-power operation 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL12                 	//Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV4               	//System Clock by 4 
.................... #FUSES USBDIV                	//USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                	//USB voltage regulator enabled 
.................... #FUSES ICPRT                 	//ICPRT enabled 
....................  
.................... #use delay(clock=20000000) 
0004:  CLRF   FEA
0006:  MOVLW  07
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    0028
000E:  MOVLW  06
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  7B
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  DECFSZ FEF,F
0026:  BRA    000E
0028:  RETLW  00
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
....................  
....................  
.................... #define LED1 pin_B0 //Active sur niveau bas. 
.................... #define LED2 pin_B1 //Active sur niveau haut. 
....................  
.................... void blinky(); //Déclaration du sous-programme de clignotement. 
....................  
.................... void main() //Programme principal. 
.................... { 
*
0068:  CLRF   FF8
006A:  BCF    FD0.7
006C:  CLRF   FEA
006E:  CLRF   FE9
0070:  BSF    FB8.3
0072:  MOVLW  08
0074:  MOVWF  FAF
0076:  MOVLW  02
0078:  MOVWF  FB0
007A:  MOVLW  A6
007C:  MOVWF  FAC
007E:  MOVLW  90
0080:  MOVWF  FAB
0082:  MOVF   FC1,W
0084:  ANDLW  C0
0086:  IORLW  0F
0088:  MOVWF  FC1
008A:  MOVLW  07
008C:  MOVWF  FB4
....................    setup_adc_ports (NO_ANALOGS|VSS_VDD); 
008E:  MOVF   FC1,W
0090:  ANDLW  C0
0092:  IORLW  0F
0094:  MOVWF  FC1
....................    setup_adc (ADC_OFF); 
0096:  BCF    FC2.0
....................    setup_psp (PSP_DISABLED); 
0098:  BCF    F96.4
....................    setup_spi (SPI_SS_DISABLED); 
009A:  BCF    FC6.5
009C:  BCF    F94.7
009E:  BSF    F93.0
00A0:  BCF    F93.1
00A2:  MOVLW  01
00A4:  MOVWF  FC6
00A6:  MOVLW  00
00A8:  MOVWF  FC7
....................    setup_wdt (WDT_OFF); 
00AA:  BCF    FD1.0
....................    setup_timer_0 (RTCC_INTERNAL); 
00AC:  MOVLW  80
00AE:  MOVWF  FD5
....................    setup_timer_1 (T1_DISABLED); 
00B0:  CLRF   FCD
....................    setup_timer_2 (T2_DISABLED, 0, 1); 
00B2:  MOVLW  00
00B4:  MOVWF  FCA
00B6:  MOVLW  00
00B8:  MOVWF  FCB
....................    setup_comparator (NC_NC_NC_NC); 
00BA:  MOVLW  07
00BC:  MOVWF  FB4
00BE:  MOVF   F92,W
00C0:  MOVLW  10
00C2:  MOVWF  00
00C4:  DECFSZ 00,F
00C6:  BRA    00C4
00C8:  NOP   
00CA:  MOVF   FB4,W
00CC:  BCF    FA1.6
....................    setup_vref (FALSE); 
00CE:  CLRF   FB5
....................  
....................    //Éteindre les deux LEDs. 
....................    output_high (LED1); 
00D0:  BCF    F93.0
00D2:  BSF    F8A.0
....................    output_low (LED2); 
00D4:  BCF    F93.1
00D6:  BCF    F8A.1
....................     
....................    WHILE (TRUE) //Boucle infinie. 
....................    { 
....................       blinky (); 
00D8:  BRA    002A
.................... } //Fin de la boucle infinie. 
00DA:  BRA    00D8
.................... } //Fin du programme principal. 
....................  
.................... void blinky() //Programme de clignotement de LEDs. 
.................... { 
00DC:  SLEEP 
....................    output_low (LED1); //Allumé la LED 1. 
*
002A:  BCF    F93.0
002C:  BCF    F8A.0
....................    delay_ms (2000); //Pendant 2 secondes. 
002E:  MOVLW  08
0030:  MOVWF  06
0032:  MOVLW  FA
0034:  MOVWF  07
0036:  RCALL  0004
0038:  DECFSZ 06,F
003A:  BRA    0032
....................    output_high (LED2); //Alumer la LED 1 et 2. 
003C:  BCF    F93.1
003E:  BSF    F8A.1
....................    delay_ms (3000); //Pendant 3 secondes. 
0040:  MOVLW  0C
0042:  MOVWF  06
0044:  MOVLW  FA
0046:  MOVWF  07
0048:  RCALL  0004
004A:  DECFSZ 06,F
004C:  BRA    0044
....................    output_high (LED1); //Éteindre la LED 1.   
004E:  BCF    F93.0
0050:  BSF    F8A.0
....................    output_low (LED2); //Éteindre la LED 2. 
0052:  BCF    F93.1
0054:  BCF    F8A.1
....................    delay_ms (2000); //Pendant 2 secondes. 
0056:  MOVLW  08
0058:  MOVWF  06
005A:  MOVLW  FA
005C:  MOVWF  07
005E:  RCALL  0004
0060:  DECFSZ 06,F
0062:  BRA    005A
....................     
.................... } 
0064:  GOTO   00DA (RETURN)
....................  

Configuration Fuses:
   Word  1: CC3F   IESO FCMEN HS PLL12 CPUDIV4 USBDIV
   Word  2: 0E3F   BROWNOUT WDT128 NOWDT BORV20 NOPUT VREGEN
   Word  3: 8700   PBADEN CCP2C1 MCLR LPT1OSC
   Word  4: 00A5   STVREN NODEBUG LVP NOXINST ICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
